server:
  error:
    include-message: always
    include-binding-errors: always

spring:
  datasource:
    password: ${DATASOURCE_PASSWORD}
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH_GOOGLE_CLIENT_ID}
            client-secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          facebook:
            client-id: ${OAUTH_FACEBOOK_CLIENT_ID}
            client-secret: ${OAUTH_FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,email,first_name,middle_name,last_name,name,verified,picture.width(250).height(250)
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2MB
      max-file-size: 30MB
      max-request-size: 30MB


cloud:
  aws:
    credentials:
      access-key: ${CLOUD_AWS_ACCESS_KEY}
      secret-key: ${CLOUD_AWS_SECRET_KEY}
    region:
      static: ${CLOUD_AWS_REGION}
    stack:
      auto: false
application:
  bucket:
    name: ${APPLICATION_BUCKET_NAME}